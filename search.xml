<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>test</title>
      <link href="/2018/04/17/test/"/>
      <content type="html"><![CDATA[<p>ggsgsfdg</p>]]></content>
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Unity组件本地映射</title>
      <link href="/2018/04/09/Unity%E7%BB%84%E4%BB%B6%E6%9C%AC%E5%9C%B0%E6%98%A0%E5%B0%84/"/>
      <content type="html"><![CDATA[<ul><li><a href="#TextMesh组件本地映射">TextMesh组件本地映射</a></li><li><a href="#Light组件本地映射">Light组件本地映射</a></li></ul><p>通过JsonNet插件将Unity组件的属性值保存到本地的Json文件中，便于重新加载数据，恢复组件属性值，达到保存组件状态的目标。</p><a id="more"></a><h2 id="TextMesh组件本地映射"><a href="#TextMesh组件本地映射" class="headerlink" title="TextMesh组件本地映射"></a>TextMesh组件本地映射</h2><p>TextMesh本地映射</p><figure class="highlight csharp"><figcaption><span>Java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> JToken <span class="title">GenerateJToken</span>(<span class="params">Component component</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            TextMesh e = component <span class="keyword">as</span> TextMesh;</span><br><span class="line">            <span class="keyword">if</span> (!e) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            JObject jo = <span class="keyword">new</span> JObject();</span><br><span class="line">            jo.Add(<span class="string">"type"</span>, <span class="keyword">typeof</span>(TextMesh).FullName);</span><br><span class="line">            jo.Add(<span class="string">"text"</span>, e.text);</span><br><span class="line">            jo.Add(<span class="string">"offsetZ"</span>, e.offsetZ);</span><br><span class="line">            jo.Add(<span class="string">"characterSize"</span>, e.characterSize);</span><br><span class="line">            jo.Add(<span class="string">"lineSpacing"</span>, e.lineSpacing);</span><br><span class="line">            jo.Add(<span class="string">"anchor"</span>, (<span class="keyword">int</span>) e.anchor);</span><br><span class="line">            jo.Add(<span class="string">"alignment"</span>, (<span class="keyword">int</span>)e.alignment);</span><br><span class="line">            jo.Add(<span class="string">"tabSize"</span>, e.tabSize);</span><br><span class="line">            jo.Add(<span class="string">"fontSize"</span>, e.fontSize);</span><br><span class="line">            jo.Add(<span class="string">"fontStyle"</span>, (<span class="keyword">int</span>)e.fontStyle);</span><br><span class="line">            jo.Add(<span class="string">"richText"</span>, e.richText);</span><br><span class="line">            <span class="keyword">var</span> color = e.color;</span><br><span class="line">            <span class="keyword">var</span> colorStr = <span class="keyword">string</span>.Format(<span class="string">"&#123;0&#125;,&#123;1&#125;,&#123;2&#125;,&#123;3&#125;"</span>, color.r, color.g, color.b, color.a);</span><br><span class="line">            jo.Add(<span class="string">"color"</span>, colorStr);</span><br><span class="line">            <span class="keyword">return</span> jo;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>TextMesh加载恢复</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ApplyJToken</span>(<span class="params">Component component, JToken jt</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            TextMesh e = component <span class="keyword">as</span> TextMesh;</span><br><span class="line">            <span class="keyword">if</span> (!e) <span class="keyword">return</span>;</span><br><span class="line">            e.text = (<span class="keyword">string</span>) jt[<span class="string">"text"</span>];</span><br><span class="line">            e.offsetZ = (<span class="keyword">float</span>) jt[<span class="string">"offsetZ"</span>];</span><br><span class="line">            e.characterSize = (<span class="keyword">float</span>) jt[<span class="string">"characterSize"</span>];</span><br><span class="line">            e.lineSpacing = (<span class="keyword">float</span>) jt[<span class="string">"lineSpacing"</span>];</span><br><span class="line">            e.anchor=(TextAnchor)(<span class="keyword">int</span>)jt[<span class="string">"anchor"</span>];</span><br><span class="line">            e.alignment = (TextAlignment) (<span class="keyword">int</span>) jt[<span class="string">"alignment"</span>];</span><br><span class="line">            e.tabSize = (<span class="keyword">float</span>) jt[<span class="string">"tabSize"</span>];</span><br><span class="line">            e.fontSize = (<span class="keyword">int</span>) jt[<span class="string">"fontSize"</span>];</span><br><span class="line">            e.fontStyle = (FontStyle) (<span class="keyword">int</span>) jt[<span class="string">"fontStyle"</span>];</span><br><span class="line">            e.richText = (<span class="keyword">bool</span>) jt[<span class="string">"richText"</span>];</span><br><span class="line">            FrameCount.CountdownCallBack(<span class="number">1</span>, () =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                e.font = Font.CreateDynamicFontFromOSFont(<span class="string">"Arial"</span>, <span class="number">12</span>);</span><br><span class="line">                <span class="keyword">if</span> (e.font != <span class="literal">null</span>) e.transform.GetComponent&lt;MeshRenderer&gt;().sharedMaterial = e.font.material;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">var</span> colorStr= (<span class="keyword">string</span>)jt[<span class="string">"color"</span>];</span><br><span class="line">            <span class="keyword">string</span>[] str = colorStr.Split(<span class="string">','</span>);</span><br><span class="line">            Color color = <span class="keyword">new</span> Color(<span class="keyword">float</span>.Parse(str[<span class="number">0</span>]), <span class="keyword">float</span>.Parse(str[<span class="number">1</span>]), <span class="keyword">float</span>.Parse(str[<span class="number">2</span>]), <span class="keyword">float</span>.Parse(str[<span class="number">3</span>]));</span><br><span class="line">            e.color = color;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="Light组件本地映射"><a href="#Light组件本地映射" class="headerlink" title="Light组件本地映射"></a>Light组件本地映射</h2><p>Light本地映射</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> JToken <span class="title">GenerateJToken</span>(<span class="params">Component component</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Light e = component <span class="keyword">as</span> Light;</span><br><span class="line">            <span class="keyword">if</span> (!e) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            JObject jo = <span class="keyword">new</span> JObject();</span><br><span class="line">            jo.Add(<span class="string">"type"</span>, <span class="keyword">typeof</span>(Light).FullName);</span><br><span class="line">            jo.Add(<span class="string">"lightType"</span>, (<span class="keyword">int</span>) e.type);</span><br><span class="line">            <span class="keyword">if</span> (e.type == LightType.Point || e.type == LightType.Spot)</span><br><span class="line">            &#123;</span><br><span class="line">                jo.Add(<span class="string">"range"</span>, e.range);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e.type == LightType.Spot)</span><br><span class="line">            &#123;</span><br><span class="line">                jo.Add(<span class="string">"spotAngle"</span>, e.spotAngle);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> color = e.color;</span><br><span class="line">            <span class="keyword">var</span> colorStr = <span class="keyword">string</span>.Format(<span class="string">"&#123;0&#125;,&#123;1&#125;,&#123;2&#125;,&#123;3&#125;"</span>, color.r, color.g, color.b, color.a);</span><br><span class="line">            jo.Add(<span class="string">"color"</span>, colorStr);</span><br><span class="line">            jo.Add(<span class="string">"intensity"</span>, (<span class="keyword">float</span>) e.intensity);</span><br><span class="line">            jo.Add(<span class="string">"shadowType"</span>, (<span class="keyword">int</span>) e.shadows);</span><br><span class="line">            jo.Add(<span class="string">"strength"</span>, e.shadowStrength);</span><br><span class="line">            jo.Add(<span class="string">"shadowResolution"</span>, (<span class="keyword">int</span>) e.shadowResolution);</span><br><span class="line">            jo.Add(<span class="string">"bias"</span>, e.shadowBias);</span><br><span class="line">            jo.Add(<span class="string">"normalBias"</span>, e.shadowNormalBias);</span><br><span class="line">            jo.Add(<span class="string">"nearPlane"</span>, e.shadowNearPlane);</span><br><span class="line">            jo.Add(<span class="string">"renderMode"</span>, (<span class="keyword">int</span>)e.renderMode);</span><br><span class="line">            jo.Add(<span class="string">"mask"</span>, (<span class="keyword">int</span>) e.cullingMask);</span><br><span class="line">            <span class="keyword">return</span> jo;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>Light属性恢复</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ApplyJToken</span>(<span class="params">Component component, JToken jt</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Light e = component <span class="keyword">as</span> Light;</span><br><span class="line">            <span class="keyword">if</span> (!e) <span class="keyword">return</span>;</span><br><span class="line">            e.type = (LightType)(<span class="keyword">int</span>)jt[<span class="string">"lightType"</span>];</span><br><span class="line">            <span class="keyword">if</span> (e.type == LightType.Point || e.type == LightType.Spot)</span><br><span class="line">            &#123;</span><br><span class="line">                e.range = (<span class="keyword">float</span>)jt[<span class="string">"range"</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e.type == LightType.Spot)</span><br><span class="line">            &#123;</span><br><span class="line">                e.spotAngle = (<span class="keyword">float</span>) jt[<span class="string">"spotAngle"</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> colorStr = (<span class="keyword">string</span>)jt[<span class="string">"color"</span>];</span><br><span class="line">            <span class="keyword">string</span>[] str = colorStr.Split(<span class="string">','</span>);</span><br><span class="line">            Color color = <span class="keyword">new</span> Color(<span class="keyword">float</span>.Parse(str[<span class="number">0</span>]), <span class="keyword">float</span>.Parse(str[<span class="number">1</span>]), <span class="keyword">float</span>.Parse(str[<span class="number">2</span>]), <span class="keyword">float</span>.Parse(str[<span class="number">3</span>]));</span><br><span class="line">            e.color = color;</span><br><span class="line">            e.intensity = (<span class="keyword">float</span>) jt[<span class="string">"intensity"</span>];</span><br><span class="line">            e.shadows = (LightShadows) (<span class="keyword">int</span>) jt[<span class="string">"shadowType"</span>];</span><br><span class="line">            e.shadowStrength = (<span class="keyword">float</span>) jt[<span class="string">"strength"</span>];</span><br><span class="line">            e.shadowResolution = (LightShadowResolution)(<span class="keyword">int</span>) jt[<span class="string">"shadowResolution"</span>];</span><br><span class="line">            e.shadowBias = (<span class="keyword">float</span>) jt[<span class="string">"bias"</span>];</span><br><span class="line">            e.shadowNormalBias = (<span class="keyword">float</span>) jt[<span class="string">"normalBias"</span>];</span><br><span class="line">            e.shadowNearPlane = (<span class="keyword">float</span>) jt[<span class="string">"nearPlane"</span>];</span><br><span class="line">            e.renderMode = (LightRenderMode) (<span class="keyword">int</span>) jt[<span class="string">"renderMode"</span>];</span><br><span class="line">            e.cullingMask = (<span class="keyword">int</span>) jt[<span class="string">"mask"</span>];</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> unity笔记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>unity笔记</title>
      <link href="/2018/03/14/unity%E7%AC%94%E8%AE%B0/"/>
      <content type="html"><![CDATA[<h3 id="代码中改变Light组件的ShadowType属性"><a href="#代码中改变Light组件的ShadowType属性" class="headerlink" title="代码中改变Light组件的ShadowType属性"></a>代码中改变Light组件的ShadowType属性</h3><pre><code class="CSharp">light.shadows=LightShadow.Hard; //LightShadow.Soft,LightShadow.None</code></pre>]]></content>
      
      <categories>
          
          <category> unity笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity笔记 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
