{"meta":{"title":"sgclzqq","subtitle":"为你，千千万万遍！","description":"Unity踩坑人","author":"sgclzqq","url":"http://sgclzqq.com"},"pages":[{"title":"关于","date":"2014-12-22T04:39:04.000Z","updated":"2018-04-17T14:37:30.254Z","comments":false,"path":"about/index.html","permalink":"http://sgclzqq.com/about/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-04-17T16:08:18.637Z","updated":"2018-04-17T16:08:18.636Z","comments":true,"path":"links/index.html","permalink":"http://sgclzqq.com/links/index.html","excerpt":"","text":"M-finder: http://www.m-finder.com/ 艾克教程网: http://2k.m-finder.com/ AprilBlank: http://www.aprilblank.com/ 魔都大白: https://blog.csdn.net/qq_27948659/ 大槐树: https://www.yyblogs.net/ 小潘: https://ghostcto.coding.me/ Wait: https://93xiaosi.github.io/"},{"title":"分类","date":"2014-12-22T04:39:04.000Z","updated":"2018-04-17T14:16:07.247Z","comments":false,"path":"categories/index.html","permalink":"http://sgclzqq.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2014-12-22T04:39:04.000Z","updated":"2018-04-17T14:14:59.263Z","comments":false,"path":"tags/index.html","permalink":"http://sgclzqq.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"网易云插件测试","slug":"网易云插件测试","date":"2018-08-25T10:16:00.000Z","updated":"2018-08-26T08:40:46.270Z","comments":true,"path":"2018/08/25/网易云插件测试/","link":"","permalink":"http://sgclzqq.com/2018/08/25/网易云插件测试/","excerpt":"","text":"网易云插件测试，可以播放歌单和单首歌曲 new APlayer({ element: document.getElementById(\"aplayer0\"), narrow: false, autoplay: true, showlrc: 0, music: { title: \"起风了\", author: \"买辣椒也用券\", url: \"http://p616rt8t9.bkt.clouddn.com/%E8%B5%B7%E9%A3%8E%E4%BA%86.mp3http://p616rt8t9.bkt.clouddn.com/%E8%B5%B7%E9%A3%8E%E4%BA%86.png\", pic: \"\", } });","categories":[{"name":"测试","slug":"测试","permalink":"http://sgclzqq.com/categories/测试/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://sgclzqq.com/tags/测试/"}]},{"title":"生活不易","slug":"生活","date":"2018-07-21T08:27:37.000Z","updated":"2018-08-25T07:04:55.945Z","comments":true,"path":"2018/07/21/生活/","link":"","permalink":"http://sgclzqq.com/2018/07/21/生活/","excerpt":"耳机返厂 吾日三省吾身 河西走廊","text":"耳机返厂 吾日三省吾身 河西走廊 耳机返厂 618在京东买的蓝牙耳机，在一个月的跑步中突然中断，再也无法连接，拒绝匹配，像发了脾气的女人一样，纵使我使出百般功夫，也无法挽回她倔强的额头，指示灯熄灭，少了一个确认眼神的她。看着抽屉里一堆躺尸的耳机，不知是红颜薄命还是我厚此薄彼，没有悉心照料她，后悔莫及。翻箱倒柜找出保修卡，匆匆送她回娘家，期待她归来仍是少年！ 吾日三省吾身人贵有自知之明。的确。上学期间，与朋友时常反省自身哪方面做的不好，在乎别人的感受，从自身找问题，也确实让我进步很多。常常缅怀古人的情怀，古人的信仰，以古人为榜样严于律己，反省自身。高中毕业后，渐渐放松自身，脸上笑容多了，坚毅的眼神淡了，白发焕新生了，享受在当下。但我却止步不前，少了思索，俗人一个，难以自知。“学而不思则罔，思而不学则殆”，“吾日三省吾身：为人谋而不忠乎？与朋友交而不信乎？传不习乎。”我想现在还来得及，克己复礼，天下为仁！ 河西走廊这些天看了央视的纪录片《河西走廊》，触动颇深，感叹秦皇汉武的雄才大略，苏武忍辱负重的节气，张骞通西域的坚韧不拔，感叹卫青直捣龙城的骁勇善战，感叹霍去病的勇冠三军、马踏匈奴、封狼居胥的战神英姿，感叹李广难封，感叹隋炀帝的大业未成等等…等等。慢慢历史长河路，河西走廊这片神圣的土地，保护了中原，同时也为中原输送了活力，在魏晋南北朝五胡乱华的三百多年动荡中，河西保留了汉文化的种子，并进一步发扬壮大。每每看到这些，有豪迈、有惋惜。多希望自己能活在那个激情岁月的年代里，纵使湮没在历史的滔滔洪水中，也要做一位见证者。人们常常说活在当下，但蓦然回首，此时此刻正如彼时彼刻，何其相似，借古昔今而已！","categories":[{"name":"生活","slug":"生活","permalink":"http://sgclzqq.com/categories/生活/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://sgclzqq.com/tags/生活/"}]},{"title":"Unity组件本地映射","slug":"Unity组件本地映射","date":"2018-04-09T12:41:32.000Z","updated":"2018-04-17T15:58:00.681Z","comments":true,"path":"2018/04/09/Unity组件本地映射/","link":"","permalink":"http://sgclzqq.com/2018/04/09/Unity组件本地映射/","excerpt":"TextMesh组件本地映射 Light组件本地映射 通过JsonNet插件将Unity组件的属性值保存到本地的Json文件中，便于重新加载数据，恢复组件属性值，达到保存组件状态的目标。","text":"TextMesh组件本地映射 Light组件本地映射 通过JsonNet插件将Unity组件的属性值保存到本地的Json文件中，便于重新加载数据，恢复组件属性值，达到保存组件状态的目标。 TextMesh组件本地映射TextMesh本地映射 123456789101112131415161718192021public JToken GenerateJToken(Component component) &#123; TextMesh e = component as TextMesh; if (!e) return null; JObject jo = new JObject(); jo.Add(\"type\", typeof(TextMesh).FullName); jo.Add(\"text\", e.text); jo.Add(\"offsetZ\", e.offsetZ); jo.Add(\"characterSize\", e.characterSize); jo.Add(\"lineSpacing\", e.lineSpacing); jo.Add(\"anchor\", (int) e.anchor); jo.Add(\"alignment\", (int)e.alignment); jo.Add(\"tabSize\", e.tabSize); jo.Add(\"fontSize\", e.fontSize); jo.Add(\"fontStyle\", (int)e.fontStyle); jo.Add(\"richText\", e.richText); var color = e.color; var colorStr = string.Format(\"&#123;0&#125;,&#123;1&#125;,&#123;2&#125;,&#123;3&#125;\", color.r, color.g, color.b, color.a); jo.Add(\"color\", colorStr); return jo; &#125; TextMesh加载恢复 123456789101112131415161718192021222324public void ApplyJToken(Component component, JToken jt) &#123; TextMesh e = component as TextMesh; if (!e) return; e.text = (string) jt[\"text\"]; e.offsetZ = (float) jt[\"offsetZ\"]; e.characterSize = (float) jt[\"characterSize\"]; e.lineSpacing = (float) jt[\"lineSpacing\"]; e.anchor=(TextAnchor)(int)jt[\"anchor\"]; e.alignment = (TextAlignment) (int) jt[\"alignment\"]; e.tabSize = (float) jt[\"tabSize\"]; e.fontSize = (int) jt[\"fontSize\"]; e.fontStyle = (FontStyle) (int) jt[\"fontStyle\"]; e.richText = (bool) jt[\"richText\"]; FrameCount.CountdownCallBack(1, () =&gt; &#123; e.font = Font.CreateDynamicFontFromOSFont(\"Arial\", 12); if (e.font != null) e.transform.GetComponent&lt;MeshRenderer&gt;().sharedMaterial = e.font.material; &#125;); var colorStr= (string)jt[\"color\"]; string[] str = colorStr.Split(','); Color color = new Color(float.Parse(str[0]), float.Parse(str[1]), float.Parse(str[2]), float.Parse(str[3])); e.color = color; &#125; Light组件本地映射Light本地映射 1234567891011121314151617181920212223242526272829public JToken GenerateJToken(Component component) &#123; Light e = component as Light; if (!e) return null; JObject jo = new JObject(); jo.Add(\"type\", typeof(Light).FullName); jo.Add(\"lightType\", (int) e.type); if (e.type == LightType.Point || e.type == LightType.Spot) &#123; jo.Add(\"range\", e.range); &#125; if (e.type == LightType.Spot) &#123; jo.Add(\"spotAngle\", e.spotAngle); &#125; var color = e.color; var colorStr = string.Format(\"&#123;0&#125;,&#123;1&#125;,&#123;2&#125;,&#123;3&#125;\", color.r, color.g, color.b, color.a); jo.Add(\"color\", colorStr); jo.Add(\"intensity\", (float) e.intensity); jo.Add(\"shadowType\", (int) e.shadows); jo.Add(\"strength\", e.shadowStrength); jo.Add(\"shadowResolution\", (int) e.shadowResolution); jo.Add(\"bias\", e.shadowBias); jo.Add(\"normalBias\", e.shadowNormalBias); jo.Add(\"nearPlane\", e.shadowNearPlane); jo.Add(\"renderMode\", (int)e.renderMode); jo.Add(\"mask\", (int) e.cullingMask); return jo; &#125; Light属性恢复 123456789101112131415161718192021222324252627public void ApplyJToken(Component component, JToken jt) &#123; Light e = component as Light; if (!e) return; e.type = (LightType)(int)jt[\"lightType\"]; if (e.type == LightType.Point || e.type == LightType.Spot) &#123; e.range = (float)jt[\"range\"]; &#125; if (e.type == LightType.Spot) &#123; e.spotAngle = (float) jt[\"spotAngle\"]; &#125; var colorStr = (string)jt[\"color\"]; string[] str = colorStr.Split(','); Color color = new Color(float.Parse(str[0]), float.Parse(str[1]), float.Parse(str[2]), float.Parse(str[3])); e.color = color; e.intensity = (float) jt[\"intensity\"]; e.shadows = (LightShadows) (int) jt[\"shadowType\"]; e.shadowStrength = (float) jt[\"strength\"]; e.shadowResolution = (LightShadowResolution)(int) jt[\"shadowResolution\"]; e.shadowBias = (float) jt[\"bias\"]; e.shadowNormalBias = (float) jt[\"normalBias\"]; e.shadowNearPlane = (float) jt[\"nearPlane\"]; e.renderMode = (LightRenderMode) (int) jt[\"renderMode\"]; e.cullingMask = (int) jt[\"mask\"]; &#125;","categories":[],"tags":[{"name":"unity笔记","slug":"unity笔记","permalink":"http://sgclzqq.com/tags/unity笔记/"}]},{"title":"unity笔记","slug":"unity笔记","date":"2018-03-14T05:57:17.000Z","updated":"2018-04-17T16:02:27.069Z","comments":true,"path":"2018/03/14/unity笔记/","link":"","permalink":"http://sgclzqq.com/2018/03/14/unity笔记/","excerpt":"","text":"代码中改变Light组件的ShadowType属性1light.shadows=LightShadow.Hard; //LightShadow.Soft,LightShadow.None","categories":[{"name":"unity笔记","slug":"unity笔记","permalink":"http://sgclzqq.com/categories/unity笔记/"}],"tags":[{"name":"unity笔记","slug":"unity笔记","permalink":"http://sgclzqq.com/tags/unity笔记/"}]}]}